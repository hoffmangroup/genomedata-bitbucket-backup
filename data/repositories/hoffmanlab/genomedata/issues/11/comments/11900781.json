{"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/11/comments/11900781.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/11#comment-11900781"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/11.json"}}, "type": "issue", "id": 11, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "Full BED File Support"}, "content": {"raw": "Ideally, no numeric value would be set for such entries. This would be equivalent to saying that there is some X (of unspecified quantity or score) at the given position. A value of 1 (for example) could be used for all values or perhaps all values could be set to NaN.\n\nInstead, an over-riding of ```chromosome.name``` could be implemented to return the corresponding strings (i.e. the entries' names) or the empty string (or strings) for a 3-column BED. Therefore, ```chromosome.name``` would continue to return the name of the chromosome itself when called upon the chromosome (i.e. scalar context), but would return a list of names if invoked upon any chromosomal interval (i.e. list context). This list of names would correspond to each of the names of all BED entries within the given interval. For BED3+1, with valid numbers in the fourth column, ```chromosome[s,e].name``` could either return the empty string or perhaps return the numbers in the fourth column (i.e. ```chromosome[s,e]```). While the latter would be superfluous, it would most closely mimic the concept of the fourth column in BED files.", "markup": "markdown", "html": "<p>Ideally, no numeric value would be set for such entries. This would be equivalent to saying that there is some X (of unspecified quantity or score) at the given position. A value of 1 (for example) could be used for all values or perhaps all values could be set to NaN.</p>\n<p>Instead, an over-riding of <code>chromosome.name</code> could be implemented to return the corresponding strings (i.e. the entries' names) or the empty string (or strings) for a 3-column BED. Therefore, <code>chromosome.name</code> would continue to return the name of the chromosome itself when called upon the chromosome (i.e. scalar context), but would return a list of names if invoked upon any chromosomal interval (i.e. list context). This list of names would correspond to each of the names of all BED entries within the given interval. For BED3+1, with valid numbers in the fourth column, <code>chromosome[s,e].name</code> could either return the empty string or perhaps return the numbers in the fourth column (i.e. <code>chromosome[s,e]</code>). While the latter would be superfluous, it would most closely mimic the concept of the fourth column in BED files.</p>", "type": "rendered"}, "created_on": "2014-08-21T00:00:50.749113+00:00", "user": {"display_name": "Coby Viner", "uuid": "{5c0277b2-d18f-432a-9ff0-3377d3063bd6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D"}, "html": {"href": "https://bitbucket.org/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/30ee4699432a3591c043fbe3d4bff771d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCV-5.png"}}, "nickname": "cviner2", "type": "user", "account_id": "557058:278c659b-177a-486c-bf20-6982986d7e43"}, "updated_on": null, "type": "issue_comment", "id": 11900781}
{"priority": "trivial", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/genomedata/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/genomedata/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/19/watch"}, "comments": {"href": "data/repositories/hoffmanlab/genomedata/issues/19/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/19/rewrite-genomedata-load-data-in-pure"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/19/vote"}}, "reporter": {"display_name": "Jay Hesselberth", "uuid": "{ba6c3099-0fad-4fe3-8aac-9429e99631c1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D"}, "html": {"href": "https://bitbucket.org/%7Bba6c3099-0fad-4fe3-8aac-9429e99631c1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/049cb0ae5e8c23023c2e48b92a391744d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-6.png"}}, "nickname": "jayhesselberth", "type": "user", "account_id": "557058:b5b61d92-1c2c-4bff-8c23-3d28f323ab21"}, "title": "Rewrite genomedata-load-data in pure Python", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I wonder whether it would be useful to rewrite `genomedata-load-data` in pure Python using `h5py`. I assume `h5py` was not available or immature at the time the C implementation was written. I had a stab at this and I don't think it would be too bad.\r\n\r\n### Advantages\r\n- Better cross-platform support\r\n- Easier installation, no compiled scripts\r\n- Easier to code support for new formats, corner cases in existing formats (e.g., weird track lines in WIG files)\r\n\r\n### Disadvantages\r\n- Probably slower loading. But this could be offset with (currently not implemented) parallelization.\r\n\r\nHas the loading step ever been profiled? What is the slowest step of loading? If it's reading raw data, the C implementation will likely be faster. If it's writing, I would imagine `h5py` is heavily optimized and would likely have performance on par with the C interface.\r\n", "markup": "markdown", "html": "<p>I wonder whether it would be useful to rewrite <code>genomedata-load-data</code> in pure Python using <code>h5py</code>. I assume <code>h5py</code> was not available or immature at the time the C implementation was written. I had a stab at this and I don't think it would be too bad.</p>\n<h3 id=\"markdown-header-advantages\">Advantages</h3>\n<ul>\n<li>Better cross-platform support</li>\n<li>Easier installation, no compiled scripts</li>\n<li>Easier to code support for new formats, corner cases in existing formats (e.g., weird track lines in WIG files)</li>\n</ul>\n<h3 id=\"markdown-header-disadvantages\">Disadvantages</h3>\n<ul>\n<li>Probably slower loading. But this could be offset with (currently not implemented) parallelization.</li>\n</ul>\n<p>Has the loading step ever been profiled? What is the slowest step of loading? If it's reading raw data, the C implementation will likely be faster. If it's writing, I would imagine <code>h5py</code> is heavily optimized and would likely have performance on par with the C interface.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-09-29T15:18:24.565922+00:00", "milestone": null, "updated_on": "2017-04-26T13:56:03.325145+00:00", "type": "issue", "id": 19}
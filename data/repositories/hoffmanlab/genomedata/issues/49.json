{"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/genomedata/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/genomedata/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/49/watch"}, "comments": {"href": "data/repositories/hoffmanlab/genomedata/issues/49/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/49/bad-error-message-when-genomedata-load"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/49/vote"}}, "reporter": {"display_name": "Coby Viner", "uuid": "{5c0277b2-d18f-432a-9ff0-3377d3063bd6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D"}, "html": {"href": "https://bitbucket.org/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/30ee4699432a3591c043fbe3d4bff771d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCV-5.png"}}, "nickname": "cviner2", "type": "user", "account_id": "557058:278c659b-177a-486c-bf20-6982986d7e43"}, "title": "Bad error message when genomedata-load-data not found on PATH", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On some environments, it is possible to perform a valid `pip install --user genomedata`, without `$HOME/.local/bin` being included in the user's `PATH`. While the user needs to ensure it is added in some fashion, often via their `.bashrc`, its absence can lead to the following cryptic error. This occurs upon invocation of `genomedata.load_genomedata.load_genomedata`, when the `genomedata-load-data` binary is not in the `PATH`. In version 1.3.6 on [Graham](https://docs.computecanada.ca/wiki/Graham):\r\n\r\n```\r\n#!text\r\n>> <cytomod.py> 2019-01-02T15:42:09.236766 Using the following\r\n                                           ambiguity map: {}.\r\n>> <cytomod.py> 2019-01-02T15:42:10.203963 Creating genomedata archive\r\n                                           in ../data//archive/.\r\n>> Using temporary Genomedata archive: /tmp/genomedata.0w5maf\r\n>> 2019-01-02T15:42:10.208567: Loading sequence files:\r\n../data/mm9_chrY.fa.gz\r\n>> 2019-01-02T15:44:34.820816: Opening Genomedata archive with 6 tracks\r\n>> 2019-01-02T15:44:34.826996: Loading data\r\n>> Loading data for track: mm9_chrY-only_5mC-fakeData.bedGraph.gz\r\nzcat ../data/mm9_chrY-only_5mC-fakeData.bedGraph.gz | genomedata-load-data -v /tmp/genomedata.0w5maf mm9_chrY-only_5mC-fakeData.bedGraph.gz\r\nError creating genomedata.\r\n>> Cleaning up... done\r\nTraceback (most recent call last):\r\n  File \"../../src/cytomod.py\", line 714, in <module>\r\n    seqfilenames=FASTA_file_list, verbose=args.verbose)\r\n  File \"/home/cviner2/.local/lib/python2.7/site-packages/genomedata/load_genomedata.py\", line 125, in load_genomedata\r\n    verbose=verbose)\r\n  File \"/home/cviner2/.local/lib/python2.7/site-packages/genomedata/_load_data.py\", line 79, in load_data\r\n    loader = Popen(load_cmd, stdin=reader.stdout)\r\n  File \"/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py\", line 390, in __init__\r\n    errread, errwrite)\r\n  File \"/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py\", line 1024, in _execute_child\r\n    raise child_exception\r\nOSError: [Errno 2] No such file or directory\r\n```  \r\n\r\n  \r\n\r\nNote that the only traceback seen by the user is an `OSError` with no target, as opposed to some informative indication that `genomedata-load-data` cannot be found.\r\n\r\nThe same occurs on the most recent version, 1.4.4, with one odd difference: the pipe between the `zcat` and `genomedata-load-data` invocation is duplicated, yielding a syntax error in the trace, but not in the actual error obtained:\r\n\r\n\r\n```\r\n>> <cytomod.py> 2019-01-02T15:28:37.717452 Creating genomedata archive\r\n                                           in ../data//archive/.\r\n>> Using temporary Genomedata archive: /tmp/genomedata.S_x9Q7\r\n>> 2019-01-02T15:28:37.721706: Loading sequence files:\r\n../data/mm9_chrY.fa.gz\r\n>> 2019-01-02T15:30:59.892858: Opening Genomedata archive with 6 tracks\r\n>> 2019-01-02T15:30:59.899173: Loading data\r\n>> Loading data for track: mm9_chrY-only_5mC-fakeData.bedGraph.gz\r\nzcat ../data/mm9_chrY-only_5mC-fakeData.bedGraph.gz |  | genomedata-load-data -v /tmp/genomedata.S_x9Q7 mm9_chrY-only_5mC-fakeData.bedGraph.gz\r\nError creating genomedata.\r\n>> Cleaning up... done\r\nTraceback (most recent call last):\r\n  File \"../../src/cytomod.py\", line 714, in <module>\r\n    seqfilenames=FASTA_file_list, verbose=args.verbose)\r\n  File \"/home/cviner2/.local/lib/python2.7/site-packages/genomedata/load_genomedata.py\", line 126, in load_genomedata\r\n    maskfilename, verbose=verbose)\r\n  File \"/home/cviner2/.local/lib/python2.7/site-packages/genomedata/_load_data.py\", line 115, in load_data\r\n    loader = Popen(load_cmd, stdin=loader_input_process.stdout)\r\n  File \"/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py\", line 390, in __init__\r\n    errread, errwrite)\r\n  File \"/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py\", line 1024, in _execute_child\r\n    raise child_exception\r\nOSError: [Errno 2] No such file or directory\r\n\r\n```\r\n\r\nThis error appears only related to the message itself, since both tests succeed on both versions when the `PATH` environment variable is corrected to include `$HOME/.local/bin`.\r\n\r\nIt might be best to add some test in the Python code, prior to invocation of any external binaries, that yields a clear error message if any needed external scripts or binaries are not on the path, as expected.", "markup": "markdown", "html": "<p>On some environments, it is possible to perform a valid <code>pip install --user genomedata</code>, without <code>$HOME/.local/bin</code> being included in the user's <code>PATH</code>. While the user needs to ensure it is added in some fashion, often via their <code>.bashrc</code>, its absence can lead to the following cryptic error. This occurs upon invocation of <code>genomedata.load_genomedata.load_genomedata</code>, when the <code>genomedata-load-data</code> binary is not in the <code>PATH</code>. In version 1.3.6 on <a data-is-external-link=\"true\" href=\"https://docs.computecanada.ca/wiki/Graham\" rel=\"nofollow\">Graham</a>:</p>\n<div class=\"codehilite language-text\"><pre><span></span>&gt;&gt; &lt;cytomod.py&gt; 2019-01-02T15:42:09.236766 Using the following\n                                           ambiguity map: {}.\n&gt;&gt; &lt;cytomod.py&gt; 2019-01-02T15:42:10.203963 Creating genomedata archive\n                                           in ../data//archive/.\n&gt;&gt; Using temporary Genomedata archive: /tmp/genomedata.0w5maf\n&gt;&gt; 2019-01-02T15:42:10.208567: Loading sequence files:\n../data/mm9_chrY.fa.gz\n&gt;&gt; 2019-01-02T15:44:34.820816: Opening Genomedata archive with 6 tracks\n&gt;&gt; 2019-01-02T15:44:34.826996: Loading data\n&gt;&gt; Loading data for track: mm9_chrY-only_5mC-fakeData.bedGraph.gz\nzcat ../data/mm9_chrY-only_5mC-fakeData.bedGraph.gz | genomedata-load-data -v /tmp/genomedata.0w5maf mm9_chrY-only_5mC-fakeData.bedGraph.gz\nError creating genomedata.\n&gt;&gt; Cleaning up... done\nTraceback (most recent call last):\n  File &quot;../../src/cytomod.py&quot;, line 714, in &lt;module&gt;\n    seqfilenames=FASTA_file_list, verbose=args.verbose)\n  File &quot;/home/cviner2/.local/lib/python2.7/site-packages/genomedata/load_genomedata.py&quot;, line 125, in load_genomedata\n    verbose=verbose)\n  File &quot;/home/cviner2/.local/lib/python2.7/site-packages/genomedata/_load_data.py&quot;, line 79, in load_data\n    loader = Popen(load_cmd, stdin=reader.stdout)\n  File &quot;/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py&quot;, line 390, in __init__\n    errread, errwrite)\n  File &quot;/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py&quot;, line 1024, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory\n</pre></div>\n\n\n<p>Note that the only traceback seen by the user is an <code>OSError</code> with no target, as opposed to some informative indication that <code>genomedata-load-data</code> cannot be found.</p>\n<p>The same occurs on the most recent version, 1.4.4, with one odd difference: the pipe between the <code>zcat</code> and <code>genomedata-load-data</code> invocation is duplicated, yielding a syntax error in the trace, but not in the actual error obtained:</p>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt; &lt;cytomod.py&gt; 2019-01-02T15:28:37.717452 Creating genomedata archive\n                                           in ../data//archive/.\n&gt;&gt; Using temporary Genomedata archive: /tmp/genomedata.S_x9Q7\n&gt;&gt; 2019-01-02T15:28:37.721706: Loading sequence files:\n../data/mm9_chrY.fa.gz\n&gt;&gt; 2019-01-02T15:30:59.892858: Opening Genomedata archive with 6 tracks\n&gt;&gt; 2019-01-02T15:30:59.899173: Loading data\n&gt;&gt; Loading data for track: mm9_chrY-only_5mC-fakeData.bedGraph.gz\nzcat ../data/mm9_chrY-only_5mC-fakeData.bedGraph.gz |  | genomedata-load-data -v /tmp/genomedata.S_x9Q7 mm9_chrY-only_5mC-fakeData.bedGraph.gz\nError creating genomedata.\n&gt;&gt; Cleaning up... done\nTraceback (most recent call last):\n  File &quot;../../src/cytomod.py&quot;, line 714, in &lt;module&gt;\n    seqfilenames=FASTA_file_list, verbose=args.verbose)\n  File &quot;/home/cviner2/.local/lib/python2.7/site-packages/genomedata/load_genomedata.py&quot;, line 126, in load_genomedata\n    maskfilename, verbose=verbose)\n  File &quot;/home/cviner2/.local/lib/python2.7/site-packages/genomedata/_load_data.py&quot;, line 115, in load_data\n    loader = Popen(load_cmd, stdin=loader_input_process.stdout)\n  File &quot;/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py&quot;, line 390, in __init__\n    errread, errwrite)\n  File &quot;/cvmfs/soft.computecanada.ca/nix/store/4x0hqnpd0hfh62m3apkxmz8hz3hlsikx-python-2.7.13-env/lib/python2.7/subprocess.py&quot;, line 1024, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory\n</pre></div>\n\n\n<p>This error appears only related to the message itself, since both tests succeed on both versions when the <code>PATH</code> environment variable is corrected to include <code>$HOME/.local/bin</code>.</p>\n<p>It might be best to add some test in the Python code, prior to invocation of any external binaries, that yields a clear error message if any needed external scripts or binaries are not on the path, as expected.</p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "new", "version": null, "edited_on": null, "created_on": "2019-01-02T22:02:00.655366+00:00", "milestone": null, "updated_on": "2019-01-03T20:46:50.406014+00:00", "type": "issue", "id": 49}
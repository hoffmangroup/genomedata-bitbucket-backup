{"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/genomedata/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/genomedata/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/2/watch"}, "comments": {"href": "data/repositories/hoffmanlab/genomedata/issues/2/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/2/accessing-multiple-discontiguous-genome"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/2/vote"}}, "reporter": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "title": "Accessing multiple discontiguous genome coords", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From Google Code Issue #17\r\n\r\n**Imported Labels**: enhancement, imported, Priority-Medium\r\n\r\n_From [jay.hesselberth](https://code.google.com/u/jay.hesselberth/) on June 16, 2011 15:10:06_\r\n\r\nI have multiple discontiguous coords on a chromosome that I want get data for, and I'd like to do it without looping over them.\r\n\r\nI can do this with numpy:\r\n\r\n>>> temp = numpy.array([1,2,3,4,5])\r\n>>> coords = [1,3]\r\n>>> temp[coords]\r\narray([2, 4])\r\n\r\nbut I can't seem to do the same thing with genomedata, e.g.\r\n\r\ngenome[chrom][coords,trackname] doesn't work.\r\n\r\nAm I stuck looping?\r\n\r\n_Original issue: http://code.google.com/p/genomedata/issues/detail?id=17_", "markup": "markdown", "html": "<p>From Google Code Issue <a href=\"#!/hoffmanlab/genomedata/issues/17/query-support-using-bed-file-as-input\" rel=\"nofollow\" title=\"Query Support using bed file as input\" class=\"ap-connect-link\">#17</a></p>\n<p><strong>Imported Labels</strong>: enhancement, imported, Priority-Medium</p>\n<p><em>From <a data-is-external-link=\"true\" href=\"https://code.google.com/u/jay.hesselberth/\" rel=\"nofollow\">jay.hesselberth</a> on June 16, 2011 15:10:06</em></p>\n<p>I have multiple discontiguous coords on a chromosome that I want get data for, and I'd like to do it without looping over them.</p>\n<p>I can do this with numpy:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>temp = numpy.array([1,2,3,4,5])\ncoords = [1,3]\ntemp[coords]\narray([2, 4])</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>but I can't seem to do the same thing with genomedata, e.g.</p>\n<p>genome[chrom][coords,trackname] doesn't work.</p>\n<p>Am I stuck looping?</p>\n<p><em>Original issue: <a href=\"http://code.google.com/p/genomedata/issues/detail?id=17\" rel=\"nofollow\" class=\"ap-connect-link\">http://code.google.com/p/genomedata/issues/detail?id=17</a></em></p>", "type": "rendered"}, "assignee": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "state": "open", "version": null, "edited_on": null, "created_on": "2014-06-09T15:59:54.386412+00:00", "milestone": null, "updated_on": "2014-06-18T15:04:49.184290+00:00", "type": "issue", "id": 2}
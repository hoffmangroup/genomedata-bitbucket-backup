{"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/51/comments/49729076.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/51#comment-49729076"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/51.json"}}, "type": "issue", "id": 51, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "Recent genomedata versions break previous (version 1.3.6) masking"}, "content": {"raw": "Thanks for looking into these! I'm not sure I follow, probably since I've not looked at this in some time and no longer recall some genomedata syntax and terms.\n\nPerhaps more context on my invocation of genomedata here will be useful:\n\nThis is occurring when the enclosed track is provided as a \"mask track\", as that term was used in version 1.3.6 and prior. This is eventually done from Cytomod via its [`getModifiedGenome`](https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default#cytomod.py-126) function, which in this case detects the use of a mask track and tries to [use it via](https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default&fileviewer=file-view-default#cytomod.py-147):\n\n\n```\n#!python\n\nmaskTrack = chromosome[s:e, maskRegionTName]\nmaskIndex = genome.tracknames_continuous.index(maskRegionTName)\n```\nAccordingly, I think it is indeed the latter\u2014this file is being used as a mask track and that mask is itself derived from this BEDGraph alone.\n\nI should also note that the indexing is indeed as you've described it, via the specified range. The mask track is used to determine the positions that are masked, as described in Cytomod's [genomedata archive creation parameter](https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default&fileviewer=file-view-default#cytomod.py-397) and in its [masking parameter](https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default&fileviewer=file-view-default#cytomod.py-575), both of which were used in this case.\n\nSorry if that doesn't help. Happy to chat about this tomorrow, if that's easier.", "markup": "markdown", "html": "<p>Thanks for looking into these! I'm not sure I follow, probably since I've not looked at this in some time and no longer recall some genomedata syntax and terms.</p>\n<p>Perhaps more context on my invocation of genomedata here will be useful:</p>\n<p>This is occurring when the enclosed track is provided as a \"mask track\", as that term was used in version 1.3.6 and prior. This is eventually done from Cytomod via its <a data-is-external-link=\"true\" href=\"https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default#cytomod.py-126\" rel=\"nofollow\"><code>getModifiedGenome</code></a> function, which in this case detects the use of a mask track and tries to <a data-is-external-link=\"true\" href=\"https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default&amp;fileviewer=file-view-default#cytomod.py-147\" rel=\"nofollow\">use it via</a>:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">maskTrack</span> <span class=\"o\">=</span> <span class=\"n\">chromosome</span><span class=\"p\">[</span><span class=\"n\">s</span><span class=\"p\">:</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">maskRegionTName</span><span class=\"p\">]</span>\n<span class=\"n\">maskIndex</span> <span class=\"o\">=</span> <span class=\"n\">genome</span><span class=\"o\">.</span><span class=\"n\">tracknames_continuous</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">maskRegionTName</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Accordingly, I think it is indeed the latter\u2014this file is being used as a mask track and that mask is itself derived from this BEDGraph alone.</p>\n<p>I should also note that the indexing is indeed as you've described it, via the specified range. The mask track is used to determine the positions that are masked, as described in Cytomod's <a data-is-external-link=\"true\" href=\"https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default&amp;fileviewer=file-view-default#cytomod.py-397\" rel=\"nofollow\">genomedata archive creation parameter</a> and in its <a data-is-external-link=\"true\" href=\"https://bitbucket.org/hoffmanlab/cytomod/src/00a6ce96835e3adc55e810151bd99e0425477f0b/src/cytomod.py?at=default&amp;fileviewer=file-view-default#cytomod.py-575\" rel=\"nofollow\">masking parameter</a>, both of which were used in this case.</p>\n<p>Sorry if that doesn't help. Happy to chat about this tomorrow, if that's easier.</p>", "type": "rendered"}, "created_on": "2019-01-03T21:23:11.934984+00:00", "user": {"display_name": "Coby Viner", "uuid": "{5c0277b2-d18f-432a-9ff0-3377d3063bd6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D"}, "html": {"href": "https://bitbucket.org/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/30ee4699432a3591c043fbe3d4bff771d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCV-5.png"}}, "nickname": "cviner2", "type": "user", "account_id": "557058:278c659b-177a-486c-bf20-6982986d7e43"}, "updated_on": "2019-01-03T21:29:11.348958+00:00", "type": "issue_comment", "id": 49729076}
{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/genomedata/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/genomedata/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/54/watch"}, "comments": {"href": "data/repositories/hoffmanlab/genomedata/issues/54/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/54/genomedata-load-joins-fasta-contig-name"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/genomedata/issues/54/vote"}}, "reporter": null, "title": "genomedata-load joins fasta contig name with rest of description line", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hello,\r\n\r\nI was recently trying to create a genomedata archive from the GRCh38 fasta here: https://www.encodeproject.org/files/GRCh38_no_alt_analysis_set_GCA_000001405.15/\r\n\r\nThe sequence description lines for this fasta look like this:\r\n`>chr1  AC:CM000663.2  gi:568336023  LN:248956422  rl:Chromosome  M5:6aef897c3d6ff0c78aff06ac189178dd  AS:GRCh38`\r\n\r\nWhen I ran `genomedata-load` using this file with `-s` parameter and a signal file, the generated contigs seem to concatenate all of the items in the description line with a colon, and then join them to the chromosome name with an underscore. As such, I get runtime warnings like these:\r\n`/anaconda3/envs/a/lib/python2.7/site-packages/tables/path.py:157: NaturalNameWarning: object name is not a valid Python identifier: 'chr1_AC:CM000663.2_gi:568336023_LN:248956422_rl:Chromosome_M5:6aef897c3d6ff0c78aff06ac189178dd_AS:GRCh38'; it does not match the pattern ^[a-zA-Z_][a-zA-Z0-9_]*$; you will not be able to use natural naming to access this object; using getattr()`\r\n\r\nWhen I look at the resulting genomedata with `genomedata-info contigs`, I see contigs like this, corroborating the above:\r\n`chr10_AC:CM000672.2_gi:568336014_LN:133797422_rl:Chromosome_M5:c0eeee7acfdaf31b770a509bdaa6e51a_AS:GRCh38\t0\t41593521\r\nchr10_AC:CM000672.2_gi:568336014_LN:133797422_rl:Chromosome_M5:c0eeee7acfdaf31b770a509bdaa6e51a_AS:GRCh38\t41693521\t41916265\r\nchr10_AC:CM000672.2_gi:568336014_LN:133797422_rl:Chromosome_M5:c0eeee7acfdaf31b770a509bdaa6e51a_AS:GRCh38\t42066265\t133797422\r\nchr11_AC:CM000673.2_gi:568336013_LN:135086622_rl:Chromosome_M5:1511375dc2dd1b633af8cf439ae90cec_AS:GRCh38\t0\t50821348\r\nchr11_AC:CM000673.2_gi:568336013_LN:135086622_rl:Chromosome_M5:1511375dc2dd1b633af8cf439ae90cec_AS:GRCh38\t51078348\t54425074`\r\n\r\nAfter I edited the fasta to omit the extra metadata in the description lines, the genomedata had the expected contigs. Since then, I also found out about another workaround that creates the genomedata using a chrom.sizes file instead of a fasta. However, this issue was definitely still worth reporting.\r\n\r\nThanks,\r\n\r\nPaul", "markup": "markdown", "html": "<p>Hello,</p>\n<p>I was recently trying to create a genomedata archive from the GRCh38 fasta here: <a href=\"https://www.encodeproject.org/files/GRCh38_no_alt_analysis_set_GCA_000001405.15/\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.encodeproject.org/files/GRCh38_no_alt_analysis_set_GCA_000001405.15/</a></p>\n<p>The sequence description lines for this fasta look like this:\n<code>&gt;chr1  AC:CM000663.2  gi:568336023  LN:248956422  rl:Chromosome  M5:6aef897c3d6ff0c78aff06ac189178dd  AS:GRCh38</code></p>\n<p>When I ran <code>genomedata-load</code> using this file with <code>-s</code> parameter and a signal file, the generated contigs seem to concatenate all of the items in the description line with a colon, and then join them to the chromosome name with an underscore. As such, I get runtime warnings like these:\n<code>/anaconda3/envs/a/lib/python2.7/site-packages/tables/path.py:157: NaturalNameWarning: object name is not a valid Python identifier: 'chr1_AC:CM000663.2_gi:568336023_LN:248956422_rl:Chromosome_M5:6aef897c3d6ff0c78aff06ac189178dd_AS:GRCh38'; it does not match the pattern ^[a-zA-Z_][a-zA-Z0-9_]*$; you will not be able to use natural naming to access this object; using getattr()</code></p>\n<p>When I look at the resulting genomedata with <code>genomedata-info contigs</code>, I see contigs like this, corroborating the above:\n<code>chr10_AC:CM000672.2_gi:568336014_LN:133797422_rl:Chromosome_M5:c0eeee7acfdaf31b770a509bdaa6e51a_AS:GRCh38  0   41593521\nchr10_AC:CM000672.2_gi:568336014_LN:133797422_rl:Chromosome_M5:c0eeee7acfdaf31b770a509bdaa6e51a_AS:GRCh38   41693521    41916265\nchr10_AC:CM000672.2_gi:568336014_LN:133797422_rl:Chromosome_M5:c0eeee7acfdaf31b770a509bdaa6e51a_AS:GRCh38   42066265    133797422\nchr11_AC:CM000673.2_gi:568336013_LN:135086622_rl:Chromosome_M5:1511375dc2dd1b633af8cf439ae90cec_AS:GRCh38   0   50821348\nchr11_AC:CM000673.2_gi:568336013_LN:135086622_rl:Chromosome_M5:1511375dc2dd1b633af8cf439ae90cec_AS:GRCh38   51078348    54425074</code></p>\n<p>After I edited the fasta to omit the extra metadata in the description lines, the genomedata had the expected contigs. Since then, I also found out about another workaround that creates the genomedata using a chrom.sizes file instead of a fasta. However, this issue was definitely still worth reporting.</p>\n<p>Thanks,</p>\n<p>Paul</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-11-22T19:42:33.876488+00:00", "milestone": null, "updated_on": "2019-12-03T20:54:18.323120+00:00", "type": "issue", "id": 54}
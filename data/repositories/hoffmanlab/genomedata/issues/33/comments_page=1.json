{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33/comments/35675302.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/33#comment-35675302"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "load_genomedata: responds poorly to invalid syntax [only a track path, instead of (name, path) tuple]"}, "content": {"raw": "Notably this example manages to hang indefinitely", "markup": "markdown", "html": "<p>Notably this example manages to hang indefinitely</p>", "type": "rendered"}, "created_on": "2017-04-06T18:23:51.581745+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 35675302}, {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33/comments/35675549.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/33#comment-35675549"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "load_genomedata: responds poorly to invalid syntax [only a track path, instead of (name, path) tuple]"}, "content": {"raw": "Upon some investigation there could be a hidden underyling problem. The fact that `tracks` option is not a tuple does not clearly explain the entire problem.\nNotably there is this from the load_seq code which happens before the tracks are parsed. From [genomedata/_load_seq.py:243](#!/hoffmanlab/genomedata/src/03e37b6cd731f0277f920ae4d496e5780d47cf51/genomedata/_load_seq.py?at=default&fileviewer=file-view-default#_load_seq.py-243):\n```python\n    warnings.simplefilter(\"ignore\")\n    with Genome(gdpath, mode=\"w\", filters=FILTERS_GZIP) as genome:\n        if seqfile_type == \"sizes\":\n            for name, size in sizes.items():\n                chromosome = create_chromosome(genome, name, mode)\n                size_chromosome(chromosome, size)\n        else:\n            assert seqfile_type in frozenset([\"agp\", \"fasta\"])\n            for filename in filenames:\n                if verbose:\n                    print(filename, file=sys.stderr)\n\n                with maybe_gzip_open(filename) as infile:\n                    if seqfile_type == \"agp\":\n                        name = path(filename).name.rpartition(\".agp\")[0]\n                        chromosome = create_chromosome(genome, name, mode)\n                        read_assembly(chromosome, infile)\n                    else:\n                        for defline, seq in LightIterator(infile):\n                            chromosome = create_chromosome(genome, defline, mode)\n                            read_seq(chromosome, seq)\n    # XXX: this should be enforced even when there is an exception\n    # is there a context manager available?\n    warnings.resetwarnings()\n```", "markup": "markdown", "html": "<p>Upon some investigation there could be a hidden underyling problem. The fact that <code>tracks</code> option is not a tuple does not clearly explain the entire problem.\nNotably there is this from the load_seq code which happens before the tracks are parsed. From <a data-is-external-link=\"true\" href=\"#!/hoffmanlab/genomedata/src/03e37b6cd731f0277f920ae4d496e5780d47cf51/genomedata/_load_seq.py?at=default&amp;fileviewer=file-view-default#_load_seq.py-243\" rel=\"nofollow\">genomedata/_load_seq.py:243</a>:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">simplefilter</span><span class=\"p\">(</span><span class=\"s2\">&quot;ignore&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">Genome</span><span class=\"p\">(</span><span class=\"n\">gdpath</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">,</span> <span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"n\">FILTERS_GZIP</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">genome</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">seqfile_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;sizes&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">size</span> <span class=\"ow\">in</span> <span class=\"n\">sizes</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">chromosome</span> <span class=\"o\">=</span> <span class=\"n\">create_chromosome</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"p\">)</span>\n                <span class=\"n\">size_chromosome</span><span class=\"p\">(</span><span class=\"n\">chromosome</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">assert</span> <span class=\"n\">seqfile_type</span> <span class=\"ow\">in</span> <span class=\"nb\">frozenset</span><span class=\"p\">([</span><span class=\"s2\">&quot;agp&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fasta&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n                    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"p\">)</span>\n\n                <span class=\"k\">with</span> <span class=\"n\">maybe_gzip_open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">infile</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">seqfile_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;agp&quot;</span><span class=\"p\">:</span>\n                        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">rpartition</span><span class=\"p\">(</span><span class=\"s2\">&quot;.agp&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                        <span class=\"n\">chromosome</span> <span class=\"o\">=</span> <span class=\"n\">create_chromosome</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"p\">)</span>\n                        <span class=\"n\">read_assembly</span><span class=\"p\">(</span><span class=\"n\">chromosome</span><span class=\"p\">,</span> <span class=\"n\">infile</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"k\">for</span> <span class=\"n\">defline</span><span class=\"p\">,</span> <span class=\"n\">seq</span> <span class=\"ow\">in</span> <span class=\"n\">LightIterator</span><span class=\"p\">(</span><span class=\"n\">infile</span><span class=\"p\">):</span>\n                            <span class=\"n\">chromosome</span> <span class=\"o\">=</span> <span class=\"n\">create_chromosome</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">,</span> <span class=\"n\">defline</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"p\">)</span>\n                            <span class=\"n\">read_seq</span><span class=\"p\">(</span><span class=\"n\">chromosome</span><span class=\"p\">,</span> <span class=\"n\">seq</span><span class=\"p\">)</span>\n    <span class=\"c1\"># XXX: this should be enforced even when there is an exception</span>\n    <span class=\"c1\"># is there a context manager available?</span>\n    <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">resetwarnings</span><span class=\"p\">()</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-04-06T18:33:56.062406+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 35675549}, {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33/comments/35675635.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/33#comment-35675635"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "load_genomedata: responds poorly to invalid syntax [only a track path, instead of (name, path) tuple]"}, "content": {"raw": "@cviner2 is the 5xC-sorted.bedgraph.gz available or is there a smaller bedGraph that produces similar results?", "markup": "markdown", "html": "<p>@cviner2 is the 5xC-sorted.bedgraph.gz available or is there a smaller bedGraph that produces similar results?</p>", "type": "rendered"}, "created_on": "2017-04-06T18:39:25.639599+00:00", "user": {"display_name": "Eric Roberts", "uuid": "{cd8c1fe0-28ca-45fb-8ef9-48090b42bb80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D"}, "html": {"href": "https://bitbucket.org/%7Bcd8c1fe0-28ca-45fb-8ef9-48090b42bb80%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/17548d71dfb29d015b880f48cfc01ca3d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsER-5.png"}}, "nickname": "ericr86", "type": "user", "account_id": "557058:c80ca578-03a1-4ac6-b3ee-50372a3fceee"}, "updated_on": null, "type": "issue_comment", "id": 35675635}, {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33/comments/35675748.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/33#comment-35675748"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "load_genomedata: responds poorly to invalid syntax [only a track path, instead of (name, path) tuple]"}, "content": {"raw": "It is not public data and is ~ 4 MiB. It is difficult for me to see how it could depend on that particular bedGraph (does any simple bedGraph not reproduce this?). I can give you a copy of it for local testing, if necessary though.\n\nI don't know if this occurs for others, as I only made this mistake the one time, in an interactive session.", "markup": "markdown", "html": "<p>It is not public data and is ~ 4 MiB. It is difficult for me to see how it could depend on that particular bedGraph (does any simple bedGraph not reproduce this?). I can give you a copy of it for local testing, if necessary though.</p>\n<p>I don't know if this occurs for others, as I only made this mistake the one time, in an interactive session.</p>", "type": "rendered"}, "created_on": "2017-04-06T18:45:19.307806+00:00", "user": {"display_name": "Coby Viner", "uuid": "{5c0277b2-d18f-432a-9ff0-3377d3063bd6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D"}, "html": {"href": "https://bitbucket.org/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/30ee4699432a3591c043fbe3d4bff771d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCV-5.png"}}, "nickname": "cviner2", "type": "user", "account_id": "557058:278c659b-177a-486c-bf20-6982986d7e43"}, "updated_on": "2017-04-06T18:46:09.330056+00:00", "type": "issue_comment", "id": 35675748}, {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33/comments/35830232.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/33#comment-35830232"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "load_genomedata: responds poorly to invalid syntax [only a track path, instead of (name, path) tuple]"}, "content": {"raw": "Reformatted a portion of the description (as inline code).", "markup": "markdown", "html": "<p>Reformatted a portion of the description (as inline code).</p>", "type": "rendered"}, "created_on": "2017-04-07T20:15:15.109209+00:00", "user": {"display_name": "Coby Viner", "uuid": "{5c0277b2-d18f-432a-9ff0-3377d3063bd6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D"}, "html": {"href": "https://bitbucket.org/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/30ee4699432a3591c043fbe3d4bff771d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCV-5.png"}}, "nickname": "cviner2", "type": "user", "account_id": "557058:278c659b-177a-486c-bf20-6982986d7e43"}, "updated_on": null, "type": "issue_comment", "id": 35830232}, {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33/comments/52876498.json"}, "html": {"href": "#!/hoffmanlab/genomedata/issues/33#comment-52876498"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata/issues/33.json"}}, "type": "issue", "id": 33, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/genomedata.json"}, "html": {"href": "#!/hoffmanlab/genomedata"}, "avatar": {"href": "data/bytebucket.org/ravatar/{78038659-1199-46ff-9d0a-675c62f89d60}ts=python"}}, "type": "repository", "name": "genomedata", "full_name": "hoffmanlab/genomedata", "uuid": "{78038659-1199-46ff-9d0a-675c62f89d60}"}, "title": "load_genomedata: responds poorly to invalid syntax [only a track path, instead of (name, path) tuple]"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-07-06T18:26:34.469862+00:00", "user": {"display_name": "Coby Viner", "uuid": "{5c0277b2-d18f-432a-9ff0-3377d3063bd6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D"}, "html": {"href": "https://bitbucket.org/%7B5c0277b2-d18f-432a-9ff0-3377d3063bd6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/30ee4699432a3591c043fbe3d4bff771d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCV-5.png"}}, "nickname": "cviner2", "type": "user", "account_id": "557058:278c659b-177a-486c-bf20-6982986d7e43"}, "updated_on": null, "type": "issue_comment", "id": 52876498}], "page": 1, "size": 6}